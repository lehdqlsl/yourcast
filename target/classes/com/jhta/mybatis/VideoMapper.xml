<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhta.mybatis.VideoMapper">
	<select id="insert" resultType="video">
		insert into Video values(seq_v_num.nextval, #{v_title}, #{v_content}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'), #{v_hit}, #{v_orgfilename}, #{v_savefilename},#{v_delete}, #{genre_num}, #{age_grade_num}, #{m_num},#{v_orgthumbnail},#{v_savethumbnail})
	</select>
	<update id="update" parameterType="video">
		update video 
		set v_title=#{v_title}, v_content=#{v_content}, 
			 v_orgfilename=#{v_orgfilename}, v_savefilename=#{v_savefilename}, 
			 v_orgthumbnail=#{v_orgthumbnail}, v_savethumbnail=#{v_savethumbnail},
			 genre_num=#{genre_num}, age_grade_num=#{age_grade_num}
		where v_num=#{v_num}
	</update>
	<select id="getInfo" parameterType="int" resultType="video">
		<!-- select * from video where v_num = #{v_num}-->
		select v.*,m.id,mp.PROFILE_SAVEFILENAME from video v, member_profile mp, member m where v.m_num=mp.m_num and mp.m_num=m.m_num and v.v_num=#{v_num}
	</select>
	<select id="getList" resultType="video">
		select * from video where v_delete=0
	</select>
	
	<select id="getMemberList" resultType="video" parameterType="hashmap">
		select * from
		(select c.*,rownum rnum from 
		(select b.*,m.name,g.GENRE_NAME,a.AGE_GRADE_NAME,vr.v_reply_cnt
		from genre g,age_grade a,(select * from video where m_num=#{m_num} and v_delete=0) b,
		member m,(select v_num,NVL(count(vr_num),0) v_reply_cnt from video_reply group by v_num)vr
		where g.genre_num=b.genre_num and a.age_grade_num=b.age_grade_num and b.m_num=m.m_num and vr.v_num(+)=b.v_num order by b.v_num desc)c)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>	
	</select>
	<select id="getGenreList" resultType="video" parameterType="hashmap">
		<!--  select * from video where genre_num=#{genre_num} and v_delete=0-->
		select * from(select aa.*,rownum rnum from
		(select v.*,m.id from video v, member m where v.m_num=m.m_num and v.genre_num=#{genre_num} and v.v_delete=0 order by v.v_num desc) aa)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
	</select>	
	<select id="allList" parameterType="hashmap" resultType="video">
		select * from(select aa.*,rownum rnum from
		(select v.*,m.id from video v, member m where v.m_num=m.m_num and v.v_delete=0 order by v.v_num desc) aa)
		<![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow} ]]>
	</select>
	<update id="delete" parameterType="int">
		update video
		set v_delete = 1
		where v_num=#{v_num}	
	</update>
	<update id="hitUpdate" parameterType="int">
		update video
		set v_hit = v_hit+1
		where v_num=#{v_num}
	</update>
	<select id="getCount" parameterType="hashmap" resultType="int">
			select NVL(count(m_num),0) cnt from video 
			<where>
				<if test="genre_num == null">
					m_num = #{m_num}
				</if>
				<if test="genre_num != null">
					genre_num = #{genre_num}
				</if>
				and v_delete = 0
			</where>
	</select>
	<select id="allCount" resultType="int">
		select NVL(count(m_num),0) cnt from video where v_delete=0
	</select>
	<select id="bookmarkList" parameterType="int" resultType="video">
		select * from(select aa.* from
		(select v.*,m.id from video v, member m,(select * from bookmark where m_num=#{m_num}) b 
		where v.m_num=m.m_num and v.v_num=b.v_num and v.v_delete=0 order by v.v_num desc) aa)
	</select>
	<select id="mainVideoList" parameterType="int" resultType="video">
		select * from(select v.*,rownum rnum from (select * from video where m_num=#{m_num} order by v_num desc) v)
		<![CDATA[ where rnum>=1 and rnum<=10 ]]>
	</select>
</mapper>